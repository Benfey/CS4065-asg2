/** Imports **/
// Gesture tracking utility
import de.voidplus.dollar.*;

/** Enums **/
enum Scheme { SHORTCUTS, GESTURES }

/** Globals **/
Scheme scheme = Scheme.SHORTCUTS;
OneDollar one;

/** Scheme Mappings **/
// Shortuct
void keyPressed() {
  // Listen for scheme changes
  if(key == '-') { scheme = Scheme.SHORTCUTS; }
  if(key == '=') { scheme = Scheme.GESTURES; }

  // Break when not in SHORTCUTS mode
  if(scheme != Scheme.SHORTCUTS) return;

  // Map keys to change events
  switch (keyCode) {
    // 1
    case 49: { shape = Shape.FREEFORM_LINE; break; }
    // 2
    case 50: { shape = Shape.STRAIGHT_LINE; break; }
    // 3
    case 51: { shape = Shape.RECTANGLE; break; }
    // 4
    case 52: { shape = Shape.OVAL; break; }
    // q
    case 81: { colour = Color.BLACK; break; }
    // w
    case 87: { colour = Color.RED; break; }
    // e
    case 69: { colour = Color.GREEN; break; }
    // r
    case 82: { colour = Color.BLUE; break; }
    // a
    case 65: { weight = Weight.THIN; break; }
    // s
    case 83: { weight = Weight.MEDIUM; break; }
    // d
    case 68: { weight = Weight.THICK; break; }
    // Backspace
    case 8:{ delete = true; break; }
    default: break;
  }
}

// Gestures
void gestures(
  String gesture,
  float confidence,
  int startX,
  int startY,
  int centroidX,
  int centroidY,
  int endX,
  int endY
) {
  if(scheme != Scheme.GESTURES) return;

  println("Gesture: " + gesture);

  // Map gestures to change events
  switch (gesture) {
    case "squiggle": { shape = Shape.FREEFORM_LINE; break; }
    case "line": { shape = Shape.STRAIGHT_LINE; break; }
    case "rectangle": { shape = Shape.RECTANGLE; break; }
    case "circle": { shape = Shape.OVAL; break; }

    case "backward_B": { colour = Color.BLACK; break; }
    case "R": { colour = Color.RED; break; }
    case "G": { colour = Color.GREEN; break; }
    case "B": { colour = Color.BLUE; break; }

    case "vertical_line": { weight = Weight.THIN; break; }
    case "vertical_line_line": { weight = Weight.MEDIUM; break; }
    case "H": { weight = Weight.THICK; break; }

    case "delete":{ delete = true; break; }
    default: break;
  }
}


/** Displays **/
// Add texts to show currently selected Shape, Color and Weight
void showInputSelections() {
  if(scheme == Scheme.SHORTCUTS) {
    // Use black text for shortcuts
    fill(0);
  } else {
    // Use blue text for gestures
    fill(0, 100, 200);
  }
  text("Shape: " + shape,   width - 150, 15);
  text("Color: " + colour,  width - 150, 35);
  text("Weight: " + weight, width - 150, 55);
}

/** Configuration **/
void trackGestures() {
  // Creating OneDollar instance
  one = new OneDollar(this);
  one.disableAutoCheck();
  one.disableMaxTime();
  println(one);

  // TODO: Maybe call the gesture by their function to make it easier to map?

  // Add SHAPE gestures
  // http://depts.washington.edu/acelab/proj/dollar/unistrokes.gif
  one.learn("squiggle", new int[] {77,238,77,238,77,237,77,237,77,236,77,234,77,233,77,232,77,231,78,229,78,228,79,227,79,225,80,224,80,223,81,223,81,222,82,221,82,221,82,220,82,220,82,220,83,219,83,219,84,218,85,218,85,217,86,216,87,215,88,215,89,214,90,213,91,213,91,213,92,212,94,212,94,211,95,211,96,210,97,210,98,210,100,209,100,208,102,208,103,207,106,207,107,206,109,206,110,205,111,205,113,204,115,203,115,203,118,203,120,202,123,201,124,201,126,201,129,200,129,200,132,200,133,200,135,199,137,199,140,199,144,199,146,199,148,199,152,199,155,199,156,199,156,199,159,199,160,199,163,199,164,199,167,200,168,200,170,201,171,201,172,201,172,201,175,202,175,202,178,204,179,204,180,204,182,207,183,207,183,207,184,208,187,210,188,210,189,211,191,212,191,213,192,213,192,213,196,216,197,217,198,217,199,219,203,222,203,223,204,223,206,225,207,226,210,228,211,229,212,230,213,231,214,232,216,233,220,236,222,237,224,238,226,240,227,240,229,241,231,242,232,243,237,246,239,247,240,248,242,248,243,249,245,250,247,250,248,251,250,251,252,252,258,254,261,255,264,255,268,256,271,256,275,257,278,257,281,258,284,258,287,258,289,259,292,259,294,259,296,260,298,260,300,260,302,260,304,261,307,261,309,261,312,261,315,261,317,261,319,261,321,260,323,260,327,258,329,258,331,257,333,256,334,255,337,254,339,254,339,253,341,253,342,252,344,251,344,251,345,250,346,250,347,249,348,248,349,248,350,247,351,246,351,245,353,244,353,243,354,242,355,242,355,241,357,240,357,239,358,238,358,237,359,237,359,236,360,235,361,234,361,233,362,232,363,231,364,229,365,228,365,226,367,221,368,220,368,219,369,218,369,218,369,217,369,216,370,215,370,214,371,214,371,213,371,212,371,211,372,211,372,210,372,209,372,208,372,207,373,207,373,207,373,206,373,206,373,205,373,205,373,205,} );
  // Right and up
  one.learn("line", new int[] { 76,274,76,274,80,274,89,274,101,274,111,274,128,273,144,272,162,272,179,271,188,271,201,271,215,271,228,271,239,272,250,273,262,273,274,273,289,273,300,272,306,272,317,271,328,270,334,270,344,269,348,269,352,269,357,268,358,268,358,268,358,267,355,260,352,251,350,245,345,232,342,219,339,205,337,193,336,186,334,173,334,166,332,158,332,151,332,149,331,142,331,138,330,131,329,125,329,123,328,118,328,113,327,107,327,104,327,100,327,96,326,91,326,89,326,87,326,84,326,83,326,82,326,82,326,82, });
  one.learn("rectangle", new int[] {78,149,78,153,78,157,78,160,79,162,79,164,79,167,79,169,79,173,79,178,79,183,80,189,80,193,80,198,80,202,81,208,81,210,81,216,82,222,82,224,82,227,83,229,83,231,85,230,88,232,90,233,92,232,94,233,99,232,102,233,106,233,109,234,117,235,123,236,126,236,135,237,142,238,145,238,152,238,154,239,165,238,174,237,179,236,186,235,191,235,195,233,197,233,200,233,201,235,201,233,199,231,198,226,198,220,196,207,195,195,195,181,195,173,195,163,194,155,192,145,192,143,192,138,191,135,191,133,191,130,190,128,188,129,186,129,181,132,173,131,162,131,151,132,149,132,138,132,136,132,122,131,120,131,109,130,107,130,90,132,81,133,76,133} );
  one.learn("circle", new int[] {127,141,124,140,120,139,118,139,116,139,111,140,109,141,104,144,100,147,96,152,93,157,90,163,87,169,85,175,83,181,82,190,82,195,83,200,84,205,88,213,91,216,96,219,103,222,108,224,111,224,120,224,133,223,142,222,152,218,160,214,167,210,173,204,178,198,179,196,182,188,182,177,178,167,170,150,163,138,152,130,143,129,140,131,129,136,126,139} );

  // Add color gestures
  one.learn("B", new int[] {158,122,158,122,157,123,157,125,157,129,157,137,158,145,159,151,161,161,163,171,163,176,164,181,165,190,165,195,166,203,166,208,166,214,166,218,166,224,166,231,166,236,166,237,166,245,167,250,168,256,168,260,168,262,168,267,168,272,168,276,168,280,168,284,168,287,168,289,168,290,168,291,168,291,168,291,168,291,168,291,168,291,167,291,167,288,166,282,165,275,164,269,164,260,163,251,163,243,163,235,162,230,162,222,161,213,161,206,159,202,159,198,158,194,158,191,158,186,158,182,157,182,157,179,157,176,157,172,157,171,157,168,157,166,157,163,157,161,157,160,157,157,157,154,157,153,157,151,157,150,157,148,157,147,157,146,157,144,157,143,157,141,157,141,157,139,157,139,157,138,157,136,157,134,157,133,157,131,157,130,157,129,157,127,157,126,157,126,156,125,156,125,156,125,156,124,156,124,156,124,157,123,158,122,158,122,161,121,167,118,170,118,177,116,178,116,185,116,187,116,189,116,191,117,191,117,194,119,199,121,204,124,207,125,207,126,210,128,211,129,213,131,215,133,215,134,218,137,220,140,221,143,222,144,224,148,225,153,227,157,228,163,228,165,229,172,229,176,228,179,228,182,227,183,227,184,225,186,225,186,223,189,220,192,220,192,216,195,214,195,213,196,209,198,204,199,203,200,201,201,197,202,195,202,192,204,191,204,190,204,189,204,188,205,187,205,186,205,186,205,185,205,183,205,183,205,180,205,180,204,179,204,179,204,178,204,177,204,175,203,174,202,173,202,173,202,173,202,173,202,173,202,173,202,175,202,178,202,184,202,188,202,196,202,202,202,208,202,214,203,218,203,221,204,225,205,228,206,229,207,232,208,233,209,237,211,241,213,242,213,247,216,249,217,252,219,254,221,255,222,256,223,257,225,259,229,260,232,260,232,260,235,260,238,260,241,260,243,260,244,260,246,260,248,259,251,258,253,257,254,256,256,254,258,252,260,248,263,247,263,243,266,239,268,238,269,234,272,232,273,228,275,224,276,223,277,219,278,218,279,214,280,211,283,209,283,208,284,204,285,201,287,200,287,197,288,196,288,196,288,193,288,193,288,192,288,189,288,188,288,184,288,184,288,183,288,181,288,181,288,180,288,180,288,179,288,179,288,176,287,174,287,171,287,170,287,169,287,168,287,167,287,166,287,166,287,166,287,166,287,166,287,165,287,165,287,165,287,165,287,165,287});
  one.learn("R", new int[] {150,156,150,156,150,157,150,158,151,162,152,168,154,175,155,181,156,191,157,204,158,218,159,226,159,233,159,240,160,251,161,260,161,265,162,268,162,271,162,275,162,277,162,278,162,279,162,280,162,281,162,281,162,281,162,280,161,280,160,276,158,270,156,260,155,255,153,243,151,231,149,222,148,212,147,205,147,195,146,186,146,179,145,170,145,168,144,163,143,159,143,157,143,155,143,155,143,154,143,153,143,152,143,152,143,150,143,149,143,149,144,147,144,146,146,144,146,142,147,142,148,140,149,139,152,138,154,136,156,136,163,135,165,135,171,135,178,135,182,135,186,136,192,137,195,137,199,139,206,141,207,142,214,144,218,147,221,149,224,152,226,155,230,159,233,164,235,169,236,171,237,173,237,176,237,178,236,182,235,184,232,188,230,191,224,197,220,201,215,205,209,209,202,213,195,216,188,219,179,221,177,222,173,222,171,222,169,222,168,222,165,221,162,221,160,220,157,220,157,219,155,219,154,219,153,219,153,219,153,219,153,219,157,219,160,219,164,220,171,220,174,220,184,222,190,223,196,224,198,225,202,227,205,229,209,234,211,236,213,239,217,242,220,246,225,250,227,253,228,254,229,255,229,256,230,257,230,258,230,259,231,262,231,262,231,263,231,265,231,265,231,266,231,266,231,266,232,266,232,266});
  one.learn("G", new int[] {276,133,276,133,275,133,274,132,273,131,271,129,269,128,266,126,263,124,262,123,260,121,259,121,258,121,257,120,256,120,254,120,253,120,252,120,250,120,248,120,245,120,245,120,240,121,235,122,230,122,226,122,223,123,220,124,214,125,211,125,209,126,207,127,205,128,203,129,201,131,200,132,200,132,199,133,198,135,197,137,197,139,196,139,196,141,195,143,194,145,194,146,193,148,193,151,192,154,192,157,192,158,192,160,192,161,192,164,192,166,192,167,192,170,192,172,192,173,193,175,193,176,193,178,193,179,194,181,194,181,195,183,195,184,196,186,197,188,198,189,199,190,200,192,200,193,202,196,203,196,204,197,207,198,209,200,213,202,215,203,221,205,229,208,237,210,247,212,251,213,261,214,265,214,275,215,286,216,291,216,300,216,304,216,310,214,315,213,317,212,319,211,320,210,322,208,323,208,323,207,325,205,325,204,325,202,326,201,326,199,325,197,324,194,322,191,320,189,317,186,317,186,314,184,313,184,310,183,308,182,301,180,295,179,289,177,282,176,276,175,266,174,260,174,258,174,253,174,248,174,241,173,239,173,239,173,237,173,237,173,237,173,236,173,236,173,236,173});
  one.learn("backward_B", new int[] {287,132,287,133,287,134,288,135,289,138,290,144,293,154,295,164,297,172,298,182,301,194,303,203,303,207,304,215,305,222,306,226,306,232,306,235,306,239,307,244,307,249,307,254,307,256,308,259,308,264,308,266,308,268,308,268,308,269,308,270,308,270,308,270,308,271,307,271,307,270,307,270,306,268,304,262,303,255,301,251,299,242,298,234,297,226,297,219,296,215,296,209,295,203,294,197,294,194,294,193,294,190,293,187,293,185,293,182,293,181,293,178,293,176,292,174,292,173,292,171,292,168,292,167,292,165,292,164,292,162,292,161,292,159,291,156,291,156,291,155,291,154,291,154,290,153,290,152,290,152,290,151,289,150,289,149,289,149,289,149,289,148,289,148,289,148,289,147,289,147,289,147,289,146,288,145,288,145,288,144,288,143,287,143,287,142,287,142,287,141,287,141,287,140,287,140,286,140,286,139,285,138,284,137,283,136,279,134,277,133,268,131,263,129,257,129,248,128,241,128,235,129,230,131,226,133,223,136,218,141,216,144,216,145,214,149,213,154,212,160,210,169,210,171,210,177,213,182,215,186,218,188,220,190,223,191,228,192,232,192,238,192,242,192,246,192,253,191,260,190,263,189,266,189,267,188,271,188,271,188,273,188,275,188,278,188,279,187,280,187,281,187,282,187,283,187,284,187,285,187,285,187,286,187,285,187,285,187,281,186,276,186,269,187,263,189,259,190,252,193,246,196,242,198,237,200,236,201,233,202,229,205,227,207,225,209,223,211,221,214,219,215,217,219,216,222,216,224,216,227,216,230,216,232,219,236,219,237,222,240,226,242,229,245,233,246,237,248,242,249,248,252,261,255,267,256,272,257,280,257,283,257,288,256,288,256,291,254,292,253,295,252,296,251,297,251,300,250,301,249,302,249,303,248,304,248,304,247,304,247,305,247,305,247,305,247});

  // Add WEIGHT gestures
  one.learn("vertical_line", new int[] { 90,178,90,179,90,180,90,183,92,188,93,193,95,202,97,210,97,220,98,233,99,250,99,271,99,280,99,306,98,328,96,342,95,355,94,362,94,372,93,382,93,389,93,395,93,396,93,401,94,404,94,405,94,407,94,407,94,407,94,407,94,407 });
  one.learn("vertical_line_line", new int[] { 93,185,93,186,92,189,92,194,93,202,94,207,97,219,99,230,101,242,101,253,102,259,102,273,102,283,101,296,101,306,101,312,101,320,101,330,100,337,100,341,100,343,100,343,100,343,99,343,99,341,98,338,97,332,96,325,95,317,94,307,94,302,93,294,93,286,93,278,93,275,95,265,96,258,97,251,98,246,99,243,99,242,99,240,99,238,99,238,100,237,100,238,102,238,106,239,115,241,126,241,136,241,141,241,147,240,151,239,155,239,158,238,159,238,163,238,168,238,176,238,183,238,187,238,193,238,196,237,197,237,197,237,198,237,198,237,198,237,199,237,199,237,199,237,199,237 });
  one.learn("H", new int[] { 137,145,137,146,137,149,138,154,140,166,145,182,150,206,155,220,159,240,165,266,168,282,169,292,171,298,172,306,172,311,173,312,173,313,173,312,173,312,172,309,171,307,168,300,165,290,162,278,159,267,158,261,157,253,156,244,155,237,154,234,154,228,153,225,152,221,152,221,152,220,152,220,152,220,153,220,164,220,174,218,180,217,191,215,200,214,207,213,211,213,214,213,218,213,220,213,221,213,221,212,222,212,222,212,223,212,226,212,227,212,228,212,230,212,230,211,230,211,230,210,229,209,227,204,225,199,223,191,221,182,219,172,218,165,217,155,217,148,217,143,217,141,218,137,218,134,218,134,218,134,218,134,219,134,220,137,224,146,227,151,233,166,240,182,249,216,252,231,255,247,260,273,262,286,264,301,266,312,267,316,268,321,269,324,269,325,270,326,270,326,270,326,270,326,270,326,270,327,270,327});

  // Add delete gesture
  one.learn("delete", new int[] {123,129,123,131,124,133,125,136,127,140,129,142,133,148,137,154,143,158,145,161,148,164,153,170,158,176,160,178,164,183,168,188,171,191,175,196,178,200,180,202,181,205,184,208,186,210,187,213,188,215,186,212,183,211,177,208,169,206,162,205,154,207,145,209,137,210,129,214,122,217,118,218,111,221,109,222,110,219,112,217,118,209,120,207,128,196,135,187,138,183,148,167,157,153,163,145,165,142,172,133,177,127,179,127,180,125} );

  // Bind gesture to a function
  one.bind("squiggle line rectangle circle B R G backward_B vertical_line vertical_line_line H delete", "gestures");
}

// On right mouse dragged and in gesture mode, track gesture
void mouseDragged() {
  if(mouseButton == RIGHT && scheme == Scheme.GESTURES) {
    one.track(mouseX, mouseY);
  }
}

// When releasing the mouse, check
void mouseReleased() {
  one.check();
}
